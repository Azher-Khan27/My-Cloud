#####################################################
		Hadoop 3 Single Node
#####################################################



# Install Java
sudo apt-get update
sudo apt install openjdk-8-jdk openjdk-8-jre -y
sudo apt update
sudo apt install openjdk-8-jdk openjdk-8-jre -y

java -version

#Create a Hadoop user for accessing HDFS and MapReduce
sudo addgroup hadoop
sudo adduser hduser --ingroup hadoop 
sudo adduser hduser sudo
sudo su hduser

#Configure SSH (this is for pasword less keys)
ssh-keygen (After this press 3 times enter)
cd .ssh
cat id_rsa.pub >> authorized_keys (also their is id_25519.pub) if it is then go as given.
ssh localhost


#Download Hadoop

wget https://dlcdn.apache.org/hadoop/common/stable/hadoop-3.4.1.tar.gz (we can download this link from hadoop.apache.org and then in download-mirrorsite-backupsites-stable-and latest version)

#Extract and Install Hadoop tar ball
tar -xzvf hadoop-3.4.1.tar.gz 

sudo chown hduser:hadoop -R /usr/local/hadoop

# Set Enviornment Variable (to set path-mentioned path - for what path- jo bhi app h wo run ho jate path dene k bad-it has to run the commnd)
readlink -f $(which java)
nano ~/.bashrc  (bashrc is linux environment file)

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export HADOOP_HOME=/usr/local/hadoop
export PATH=$PATH:$HADOOP_HOME/bin
export PATH=$PATH:$HADOOP_HOME/sbin
export PATH=$PATH:/usr/local/hadoop/bin/
export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_HDFS_HOME=$HADOOP_HOME
export YARN_HOME=$HADOOP_HOME
export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop

source ~/.bashrc

cd /usr/local/hadoop/etc/hadoop/

#Update hadoop-env.sh (this is hadoop environment file)
nano hadoop-env.sh (copy and below export lines into nano)
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export HADOOP_LOG_DIR=/var/log/hadoop

sudo mkdir /var/log/hadoop
sudo chown hduser:hadoop -R /var/log/hadoop

#Update core-site.xml
nano core-site.xml
 <property>
  <name>fs.defaultFS</name>
  <value>hdfs://localhost:54310</value>
</property>

(paste above script between configuration & /configuration)

#Update mapred-site.xml
nano mapred-site.xml
<property>
  <name>mapreduce.jobtracker.address</name>
  <value>localhost:54311</value>
   </property>
<property>
   <name>mapreduce.framework.name</name>
   <value>yarn</value>
 </property>
<property>
  <name>yarn.app.mapreduce.am.env</name>
  <value>HADOOP_MAPRED_HOME=$HADOOP_MAPRED_HOME</value>
</property>
<property>
  <name>mapreduce.map.env</name>
  <value>HADOOP_MAPRED_HOME=$HADOOP_MAPRED_HOME</value>
</property>
<property>
  <name>mapreduce.reduce.env</name>
  <value>HADOOP_MAPRED_HOME=$HADOOP_MAPRED_HOME</value>
</property>


#Update hdfs-site.xml
sudo mkdir -p /usr/local/hadoop_store/hdfs/namenode
sudo mkdir -p /usr/local/hadoop_store/hdfs/datanode
sudo chown -R hduser:hadoop /usr/local/hadoop_store
nano hdfs-site.xml
<property> 
<name>dfs.replication</name>
  <value>1</value>
 </property>
 <property>
   <name>dfs.namenode.name.dir</name>
   <value>file:/usr/local/hadoop_store/hdfs/namenode</value>
 </property>
 <property>
   <name>dfs.datanode.data.dir</name>
   <value>file:/usr/local/hadoop_store/hdfs/datanode</value>
 </property>


#Update yarn-site.xml
nano yarn-site.xml
<property>
      <name>yarn.nodemanager.aux-services</name>
      <value>mapreduce_shuffle</value>
   </property>
<property>
        <name>yarn.nodemanager.env-whitelist</name>
        <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>
  </property>

 (After all above configuration do cd and come on )

#Format Namenode
hdfs namenode -format (why we are doing this- to start new standard)

start-dfs.sh
start-yarn.sh


jps

After deploying hadoop we are putting some data on hadoop below given

hdfs dfs -mkdir /user
hdfs dfs -mkdir /user/hduser
hdfs dfs -put hadoop-3.3.5.tar.gz /user/hduser

yarn jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-*examples*.jar pi 5 10


WebUI
NN:9870

################################################
		Python Web App - Docker Compose
################################################


---** Create Project Directory **---

$ mkdir proj1

$ cd proj1


---** Create the python app **---

$ nano app.py

import time

import redis
from flask import Flask

app = Flask(__name__)
cache = redis.Redis(host='redis', port=6379)

def get_hit_count():
    retries = 5
    while True:
        try:
            return cache.incr('hits')
        except redis.exceptions.ConnectionError as exc:
            if retries == 0:
                raise exc
            retries -= 1
            time.sleep(0.5)

@app.route('/')
def hello():
    count = get_hit_count()
    return 'Hello World! I have been seen {} times.\n'.format(count)



---** Create the Requirements file **---

$ nano requirements.txt
flask
redis


---** Create Dockerfile **---

$ nano Dockerfile
# syntax=docker/dockerfile:1
FROM python:3.10-alpine
WORKDIR /code
ENV FLASK_APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0
RUN apk add --no-cache gcc musl-dev linux-headers
COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt
EXPOSE 5000
COPY . .
CMD ["flask", "run", "--debug"]


---** Create Compose file **---

nano compose.yaml
services:
  web:
    build: .
    ports:
      - "8000:5000"
  redis:
    image: "redis:alpine"



---** Build and run App **---

$ docker compose up


>> Check on port 8000 in browser



#######################################################################################


>>> Docker Compose Project Links

https://github.com/docker/awesome-compose

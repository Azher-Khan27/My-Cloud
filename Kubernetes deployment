
Kubernetes Deployment
##########################################################
Kubernetes Deployment - kubeadm
##########################################################

Launch 3 nodes (1 master and 2 Worker)
-----*** Initialise Hostnames ***-----
$ sudo hostnamectl set-hostname k8s-master
$ sudo hostnamectl set-hostname k8s-worker1
$ sudo hostnamectl set-hostname k8s-worker2
$ sudo nano /etc/hosts
172.31.39.255 m1
172.31.33.196 w1
172.31.37.69 w2
>>> Exit node and connect again

-----*** Set up Docker Engine and containerd ***-----
>>> Load and enable kernel modules
$ cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF
$ sudo modprobe overlay
$ sudo modprobe br_netfilter
2 | P a g e databinaries

>>> Iptable configs
$ cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward = 1
EOF
$ sudo sysctl --system
$ sudo apt-get update && sudo apt-get install -y ca-certificates curl gnupg lsb-release apt-transport-https
$ sudo mkdir -m 0755 -p /etc/apt/keyrings
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
$ echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
$ sudo apt-get update
$ VERSION_STRING=5:23.0.1-1~ubuntu.20.04~focal
$ sudo apt-get install -y docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin
$ sudo usermod -aG docker $USER
>>> Make sure that 'disabled_plugins' is commented out in your config.toml file
$ sudo sed -i 's/disabled_plugins/#disabled_plugins/' /etc/containerd/config.toml
$ sudo systemctl restart containerd

>>> Disable swap
$ sudo swapoff -a

-----*** Install kubadm, kubectl and kubelet ***-----
$ curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
$ cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
$ sudo apt-get update && sudo apt-get install -y kubelet=1.27.0-00 kubeadm=1.27.0-00 kubectl=1.27.0-00
$ sudo apt-mark hold kubelet kubeadm kubectl
>>> On the Control pane (master) - Initialise the kubernetes cluster
$ sudo kubeadm init --pod-network-cidr 192.168.0.0/16 --kubernetes-version 1.27.0

>>> Make kubectl work with non root user
$ mkdir -p $HOME/.kube
$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
>>> Verify if clutser is running
$ kubectl get nodes

>>> Install the Calico network add-on
$ kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
>>> Get join command for workers
$ kubeadm token create --print-join-command
(Paste on all workers)
>>> Check the cluster
$ kubectl get nodes
